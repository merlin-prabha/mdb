{"version":3,"sources":["context/MovieContext.js","components/NavBar/index.js","components/MovieCard/index.js","components/Pagination/index.js","components/PopularMovies/index.js","components/TopRated/index.js","components/UpComing/index.js","components/SearchedMovies/index.js","components/SingleMovieDetails/index.js","App.js","index.js"],"names":["MovieContext","React","createContext","searchResponse","onTriggerSearchQuery","withRouter","props","_jsxs","className","children","_jsx","Link","to","type","Consumer","value","searchInput","onChangeSearchInput","onChange","event","target","placeholder","onClick","preventDefault","history","push","MovieCard","details","id","title","posterPath","voteAverage","src","alt","concat","Pagination","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","state","pageNo","onNextPage","_this$props","apiCallback","totalPages","setState","prevState","onPrevPage","_createClass","key","this","Component","PopularMovies","isLoading","popularMovieResponse","getUpdatedData","responseData","total_pages","totalResults","total_results","results","map","eachMovie","poster_path","vote_average","getPopularMoviesData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","apiUrl","response","fetchedData","updatedData","_args","wrap","_context","prev","next","undefined","fetch","sent","json","stop","renderLoadingView","Loader","color","renderMovies","movie","_this$state","_Fragment","NavBar","topRatedResponse","getTopRatedMovies","upComingResponse","getUpComingMovies","apiStatusConstants","SearchedMovies","renderEmptyView","renderSearchResultViews","apiStatus","renderMoviesList","onTriggerSearchingQuery","console","log","SingleMovieDetails","movieDetails","castDetails","runTime","runtime","releaseDate","release_date","overview","genres","each","name","getMovieDetails","match","params","getUpdatedCastData","data","cast","eachCast","castId","cast_id","profilePath","profile_path","character","getCastDetails","_callee2","updatedCastData","_context2","renderMovieDetails","renderCastDetails","App","input","Provider","Switch","Route","exact","path","component","TopRated","UpComing","ReactDOM","render","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.fb5531e9.chunk.js","sourcesContent":["import React from 'react'\n\nconst MovieContext = React.createContext({\n  searchResponse: {},\n  onTriggerSearchQuery: () => {},\n})\n\nexport default MovieContext\n","import {Link, withRouter} from 'react-router-dom'\nimport MovieContext from '../../context/MovieContext'\nimport './index.css'\n\nconst NavBar = props => {\n  const renderSearchBar = () => (\n    <MovieContext.Consumer>\n      {value => {\n        const {onTriggerSearchQuery, searchInput, onChangeSearchInput} = value\n\n        const onChangeInput = event => {\n          onChangeSearchInput(event.target.value)\n        }\n\n        const onSearch = event => {\n          event.preventDefault()\n          onTriggerSearchQuery()\n          const {history} = props\n          history.push('/search')\n        }\n\n        return (\n          <div className=\"input-container\">\n            <input\n              type=\"search\"\n              className=\"search\"\n              onChange={onChangeInput}\n              value={searchInput}\n              placeholder=\"Search\"\n            />\n            <button type=\"button\" className=\"search-btn\" onClick={onSearch}>\n              Search\n            </button>\n          </div>\n        )\n      }}\n    </MovieContext.Consumer>\n  )\n  return (\n    <nav className=\"navbar\">\n      <Link to=\"/\" className=\"link-element\">\n        <h1>movieDB</h1>\n      </Link>\n      <div className=\"center\">\n        <ul className=\"navigation-buttons\">\n          <li className=\"list\">\n            <Link to=\"/\" className=\"link-element\">\n              <button type=\"button\" className=\"nav-btn\">\n                Popular\n              </button>\n            </Link>\n          </li>\n          <li className=\"list\">\n            <Link to=\"/top-rated\" className=\"link-element\">\n              <button type=\"button\" className=\"nav-btn\">\n                Top Rated\n              </button>\n            </Link>\n          </li>\n          <li className=\"list\">\n            <Link to=\"/upcoming\" className=\"link-element\">\n              <button type=\"button\" className=\"nav-btn\">\n                Upcoming\n              </button>\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <div className=\"center\">{renderSearchBar()}</div>\n    </nav>\n  )\n}\n\nexport default withRouter(NavBar)\n","import {Link} from 'react-router-dom'\nimport './index.css'\n\nconst MovieCard = props => {\n  const {details} = props\n  const {id, title, posterPath, voteAverage} = details\n\n  return (\n    <li className=\"each-movie\">\n      <div className=\"movie-card\">\n        <img src={posterPath} alt={title} className=\"poster-img\" />\n        <div className=\"text-button-container\">\n          <div className=\"text-container\">\n            <p className=\"movie-title\">{title}</p>\n            <p className=\"movie-title\">Rating: {voteAverage}</p>\n          </div>\n          <Link to={`/movie/${id}`} className=\"link-btn\">\n            <button className=\"view-details-btn\" type=\"button\">\n              View Details\n            </button>\n          </Link>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default MovieCard\n","import {Component} from 'react'\nimport './index.css'\n\nclass Pagination extends Component {\n  state = {pageNo: 1}\n\n  onNextPage = () => {\n    const {apiCallback, totalPages} = this.props\n    this.setState(\n      prevState => {\n        if (prevState.pageNo < totalPages) {\n          return {pageNo: prevState.pageNo + 1}\n        }\n        return prevState\n      },\n      () => {\n        const {pageNo} = this.state\n        apiCallback(pageNo)\n      },\n    )\n  }\n\n  onPrevPage = () => {\n    const {apiCallback} = this.props\n    this.setState(\n      prevState => {\n        if (prevState.pageNo > 1) {\n          return {pageNo: prevState.pageNo - 1}\n        }\n        return prevState\n      },\n      () => {\n        const {pageNo} = this.state\n        apiCallback(pageNo)\n      },\n    )\n  }\n\n  render() {\n    const {pageNo} = this.state\n    return (\n      <div className=\"pagination\">\n        <button type=\"button\" className=\"page-btn\" onClick={this.onPrevPage}>\n          Prev\n        </button>\n        <p>{pageNo}</p>\n        <button type=\"button\" className=\"page-btn\" onClick={this.onNextPage}>\n          next\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default Pagination\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport NavBar from '../NavBar'\nimport MovieCard from '../MovieCard'\nimport Pagination from '../Pagination'\nimport './index.css'\n\nclass PopularMovies extends Component {\n  state = {isLoading: true, popularMovieResponse: {}}\n\n  componentDidMount() {\n    this.getPopularMoviesData()\n  }\n\n  getUpdatedData = responseData => ({\n    totalPages: responseData.total_pages,\n    totalResults: responseData.total_results,\n    results: responseData.results.map(eachMovie => ({\n      id: eachMovie.id,\n      posterPath: `https://image.tmdb.org/t/p/w500${eachMovie.poster_path}`,\n      voteAverage: eachMovie.vote_average,\n      title: eachMovie.title,\n    })),\n  })\n\n  getPopularMoviesData = async (page = 1) => {\n    const API_KEY = '80e75070ba529ff4c88353c550576d1c'\n    const apiUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=${page}`\n    const response = await fetch(apiUrl)\n    const fetchedData = await response.json()\n    const updatedData = this.getUpdatedData(fetchedData)\n    this.setState({isLoading: false, popularMovieResponse: updatedData})\n  }\n\n  renderLoadingView = () => (\n    <div className=\"loader-container\">\n      <Loader type=\"TailSpin\" color=\"#032541\" />\n    </div>\n  )\n\n  renderMovies = () => {\n    const {popularMovieResponse} = this.state\n    const {results} = popularMovieResponse\n\n    return (\n      <ul className=\"movies-list\">\n        {results.map(movie => (\n          <MovieCard key={movie.id} details={movie} />\n        ))}\n      </ul>\n    )\n  }\n\n  render() {\n    const {isLoading, popularMovieResponse} = this.state\n    return (\n      <>\n        <NavBar />\n        <div className=\"body-container\">\n          {isLoading ? this.renderLoadingView() : this.renderMovies()}\n        </div>\n        <Pagination\n          totalPages={popularMovieResponse.totalPages}\n          apiCallback={this.getPopularMoviesData}\n        />\n      </>\n    )\n  }\n}\n\nexport default PopularMovies\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport NavBar from '../NavBar'\nimport MovieCard from '../MovieCard'\nimport Pagination from '../Pagination'\nimport './index.css'\n\nclass PopularMovies extends Component {\n  state = {isLoading: true, topRatedResponse: {}}\n\n  componentDidMount() {\n    this.getTopRatedMovies()\n  }\n\n  getUpdatedData = responseData => ({\n    totalPages: responseData.total_pages,\n    totalResults: responseData.total_results,\n    results: responseData.results.map(eachMovie => ({\n      id: eachMovie.id,\n      posterPath: `https://image.tmdb.org/t/p/w500${eachMovie.poster_path}`,\n      voteAverage: eachMovie.vote_average,\n      title: eachMovie.title,\n    })),\n  })\n\n  getTopRatedMovies = async (page = 1) => {\n    const API_KEY = '80e75070ba529ff4c88353c550576d1c'\n    const apiUrl = `https://api.themoviedb.org/3/movie//top_rated?api_key=${API_KEY}&language=en-US&page=${page}`\n    const response = await fetch(apiUrl)\n    const fetchedData = await response.json()\n    const updatedData = this.getUpdatedData(fetchedData)\n    this.setState({isLoading: false, topRatedResponse: updatedData})\n  }\n\n  renderLoadingView = () => (\n    <div className=\"loader-container\">\n      <Loader type=\"TailSpin\" color=\"#032541\" />\n    </div>\n  )\n\n  renderMovies = () => {\n    const {topRatedResponse} = this.state\n    const {results} = topRatedResponse\n\n    return (\n      <ul className=\"movies-list\">\n        {results.map(movie => (\n          <MovieCard key={movie.id} details={movie} />\n        ))}\n      </ul>\n    )\n  }\n\n  render() {\n    const {isLoading, topRatedResponse} = this.state\n    return (\n      <>\n        <NavBar />\n        <div className=\"body-container\">\n          {isLoading ? this.renderLoadingView() : this.renderMovies()}\n        </div>\n        <Pagination\n          totalPages={topRatedResponse.totalPages}\n          apiCallback={this.getTopRatedMovies}\n        />\n      </>\n    )\n  }\n}\n\nexport default PopularMovies\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport NavBar from '../NavBar'\nimport MovieCard from '../MovieCard'\nimport Pagination from '../Pagination'\nimport './index.css'\n\nclass PopularMovies extends Component {\n  state = {isLoading: true, upComingResponse: {}}\n\n  componentDidMount() {\n    this.getUpComingMovies()\n  }\n\n  getUpdatedData = responseData => ({\n    totalPages: responseData.total_pages,\n    totalResults: responseData.total_results,\n    results: responseData.results.map(eachMovie => ({\n      id: eachMovie.id,\n      posterPath: `https://image.tmdb.org/t/p/w500${eachMovie.poster_path}`,\n      voteAverage: eachMovie.vote_average,\n      title: eachMovie.title,\n    })),\n  })\n\n  getUpComingMovies = async (page = 1) => {\n    const API_KEY = '80e75070ba529ff4c88353c550576d1c'\n    const apiUrl = `https://api.themoviedb.org/3/movie//upcoming?api_key=${API_KEY}&language=en-US&page=${page}`\n    const response = await fetch(apiUrl)\n    const fetchedData = await response.json()\n    const updatedData = this.getUpdatedData(fetchedData)\n    this.setState({isLoading: false, upComingResponse: updatedData})\n  }\n\n  renderLoadingView = () => (\n    <div className=\"loader-container\">\n      <Loader type=\"TailSpin\" color=\"#032541\" />\n    </div>\n  )\n\n  renderMovies = () => {\n    const {upComingResponse} = this.state\n    const {results} = upComingResponse\n\n    return (\n      <ul className=\"movies-list\">\n        {results.map(movie => (\n          <MovieCard key={movie.id} details={movie} />\n        ))}\n      </ul>\n    )\n  }\n\n  render() {\n    const {isLoading, upComingResponse} = this.state\n    return (\n      <>\n        <NavBar />\n        <div className=\"body-container\">\n          {isLoading ? this.renderLoadingView() : this.renderMovies()}\n        </div>\n        <Pagination\n          totalPages={upComingResponse.totalPages}\n          apiCallback={this.getUpComingMovies}\n        />\n      </>\n    )\n  }\n}\n\nexport default PopularMovies\n","import Loader from 'react-loader-spinner'\nimport NavBar from '../NavBar'\nimport MovieCard from '../MovieCard'\nimport Pagination from '../Pagination'\nimport MovieContext from '../../context/MovieContext'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nconst SearchedMovies = () => {\n  const renderEmptyView = () => (\n    <div className=\"empty-view-container\">\n      <h1>No results found</h1>\n      <p>Search Again</p>\n    </div>\n  )\n\n  const renderMoviesList = searchResponse => {\n    const {results} = searchResponse\n\n    if (results.length === 0) {\n      return renderEmptyView()\n    }\n    return (\n      <ul className=\"movies-list\">\n        {results.map(movie => (\n          <MovieCard key={movie.id} details={movie} />\n        ))}\n      </ul>\n    )\n  }\n\n  const renderLoadingView = () => (\n    <div className=\"loader-container\">\n      <Loader type=\"TailSpin\" color=\"#032541\" />\n    </div>\n  )\n\n  const renderSearchResultViews = value => {\n    const {searchResponse, apiStatus} = value\n\n    switch (apiStatus) {\n      case apiStatusConstants.inProgress:\n        return renderLoadingView()\n      case apiStatusConstants.success:\n        return renderMoviesList(searchResponse)\n      default:\n        return renderEmptyView()\n    }\n  }\n\n  return (\n    <MovieContext.Consumer>\n      {value => {\n        const {searchResponse, onTriggerSearchingQuery} = value\n        console.log(searchResponse)\n\n        return (\n          <>\n            <NavBar />\n            <div className=\"route-page-body\">\n              {renderSearchResultViews(value)}\n            </div>\n            <Pagination\n              totalPages={searchResponse.totalPages}\n              apiCallback={onTriggerSearchingQuery}\n            />\n          </>\n        )\n      }}\n    </MovieContext.Consumer>\n  )\n}\n\nexport default SearchedMovies\n","import {Component} from 'react'\nimport NavBar from '../NavBar'\n\nimport './index.css'\n\nclass SingleMovieDetails extends Component {\n  state = {movieDetails: {}, castDetails: {}}\n\n  componentDidMount() {\n    this.getCastDetails()\n    this.getMovieDetails()\n  }\n\n  getUpdatedData = responseData => ({\n    id: responseData.id,\n    posterPath: `https://image.tmdb.org/t/p/w500${responseData.poster_path}`,\n    voteAverage: responseData.vote_average,\n    title: responseData.title,\n    runTime: responseData.runtime,\n    releaseDate: responseData.release_date,\n    overview: responseData.overview,\n    genres: responseData.genres.map(each => ({\n      id: each.id,\n      name: each.name,\n    })),\n  })\n\n  getMovieDetails = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const API_KEY = '80e75070ba529ff4c88353c550576d1c'\n    const apiUrl = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-`\n    const response = await fetch(apiUrl)\n    const fetchedData = await response.json()\n    const updatedData = this.getUpdatedData(fetchedData)\n    this.setState({movieDetails: updatedData})\n  }\n\n  getUpdatedCastData = data => ({\n    id: data.id,\n    cast: data.cast.map(eachCast => ({\n      castId: eachCast.cast_id,\n      profilePath: `https://image.tmdb.org/t/p/w500${eachCast.profile_path}`,\n      character: eachCast.character,\n      name: eachCast.name,\n    })),\n  })\n\n  getCastDetails = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const API_KEY = '80e75070ba529ff4c88353c550576d1c'\n    const apiUrl = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en`\n    const response = await fetch(apiUrl)\n    const fetchedData = await response.json()\n\n    const updatedCastData = this.getUpdatedCastData(fetchedData)\n\n    this.setState({castDetails: updatedCastData})\n  }\n\n  renderMovieDetails = () => {\n    const {movieDetails} = this.state\n    const {\n      posterPath,\n      voteAverage,\n      title,\n      runTime,\n      releaseDate,\n      overview,\n      name,\n    } = movieDetails\n\n    return (\n      <div className=\"movie-detail\">\n        <img src={posterPath} alt={title} className=\"poster-image\" />\n        <p className=\"movie-name\">{title}</p>\n        <div>\n          <p className=\"title\">\n            <span>Rating:</span> {voteAverage}\n          </p>\n          <p className=\"title\">\n            <span>Duration:</span> {runTime} min\n          </p>\n          <p className=\"title\">\n            <span>Release Date:</span> {releaseDate}\n          </p>\n          <p className=\"title\">\n            <span>Overview:</span> {overview}\n          </p>\n        </div>\n      </div>\n    )\n  }\n\n  renderCastDetails = () => {\n    const {castDetails} = this.state\n    const {cast} = castDetails\n    console.log(cast)\n  }\n\n  render() {\n    return (\n      <>\n        <NavBar />\n        <div className=\"main-container\">\n          <div className=\"movie-details-container\">\n            <h1 className=\"movie-details-heading\">Movie Details</h1>\n            {this.renderMovieDetails()}\n          </div>\n          <div className=\"movie-details-container-cast\">\n            {this.renderCastDetails()}\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default SingleMovieDetails\n","import {Component} from 'react'\nimport {Switch, Route} from 'react-router-dom'\n\nimport MovieContext from './context/MovieContext'\nimport PopularMovies from './components/PopularMovies'\nimport TopRated from './components/TopRated'\nimport UpComing from './components/UpComing'\nimport SearchedMovies from './components/SearchedMovies'\nimport SingleMovieDetails from './components/SingleMovieDetails'\n\nimport './App.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass App extends Component {\n  state = {\n    searchInput: '',\n    searchResponse: {},\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  getUpdatedData = responseData => ({\n    totalPages: responseData.total_pages,\n    totalResults: responseData.total_results,\n    results: responseData.results.map(eachMovie => ({\n      id: eachMovie.id,\n      posterPath: `https://image.tmdb.org/t/p/w500${eachMovie.poster_path}`,\n      voteAverage: eachMovie.vote_average,\n      title: eachMovie.title,\n    })),\n  })\n\n  onTriggerSearchQuery = async (page = 1) => {\n    const {searchInput} = this.state\n    const API_KEY = '80e75070ba529ff4c88353c550576d1c'\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const apiUrl = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchInput}&page=${page}`\n    const response = await fetch(apiUrl)\n    const fetchedData = await response.json()\n    const updatedData = this.getUpdatedData(fetchedData)\n    this.setState({\n      apiStatus: apiStatusConstants.success,\n      searchResponse: updatedData,\n    })\n  }\n\n  onChangeSearchInput = input => {\n    this.setState({searchInput: input})\n  }\n\n  render() {\n    const {searchResponse, searchInput, apiStatus} = this.state\n\n    return (\n      <MovieContext.Provider\n        value={{\n          searchInput,\n          apiStatus,\n          searchResponse,\n          onTriggerSearchQuery: this.onTriggerSearchQuery,\n          onChangeSearchInput: this.onChangeSearchInput,\n        }}\n      >\n        <Switch>\n          <Route exact path=\"/\" component={PopularMovies} />\n          <Route exact path=\"/top-rated\" component={TopRated} />\n          <Route exact path=\"/upcoming\" component={UpComing} />\n          <Route exact path=\"/search\" component={SearchedMovies} />\n          <Route exact path=\"/movie/:id\" component={SingleMovieDetails} />\n        </Switch>\n      </MovieContext.Provider>\n    )\n  }\n}\n\nexport default App\n","import {BrowserRouter} from 'react-router-dom'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}